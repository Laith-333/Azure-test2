on: [push]
name: GettingStarted_Container_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    # Step 2: Login via Azure CLI
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Login to Azure Container Registry
    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # Step 4: Build and Push Docker Image
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }} \
        && docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}

    # Step 5: Deploy to Azure Container Instances
    - name: 'Deploy to Azure Container Instances'
      uses: azure/aci-deploy@v1
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: getting-started-github
        location: 'westeurope'
        ports: '3000'
        azure-file-volume-share-name: ${{ secrets.STORAGE_FILE_SHARE_NAME }}
        azure-file-volume-account-name: ${{ secrets.STORAGE_ACCOUNT_NAME }}
        azure-file-volume-account-key: ${{ secrets.STORAGE_ACCOUNT_KEY }}
        azure-file-volume-mount-path: '/app/data'
